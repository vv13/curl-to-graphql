{"version":3,"sources":["formatter/parser.ts","formatter/index.ts","utils.ts","hooks.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["parser","str","s","shellwords","split","args","reduce","a","newArgs","indexOf","push","slice","rewrite","out","method","header","url","state","forEach","arg","isURL","field","parseField","body","btoa","DefaultValue","query","variables","formatJsToJson","js","JSON","stringify","formatStrToGraphql","prettier","format","plugins","parserGraphql","test","uuid","d","Date","getTime","replace","c","r","Math","random","floor","toString","configs","key","title","doRequest","curl","parsedInput","axios","request","headers","data","then","error","App","useState","input","setInput","isRequest","setIsRequest","responseTime","setResponseTime","editingName","setEditingName","result","setResult","editingId","setEditingId","curlHistories","setCurlHistories","useEffect","localForage","getItem","setHistories","curls","setItem","pushHistory","useCallback","id","name","concat","removeHistory","filter","curlHis","changeHistory","histories","splice","findIndex","useHistory","formatInput","useMemo","inputStr","parsed","jsCodes","parse","formatter","useClippy","setClipbaord","handleChangeHistory","find","item","hasError","handleRun","date","now","className","classNames","showError","value","placeholder","onChange","e","target","readOnly","map","onClick","LoadingButton","loading","disabled","Button","beautyFormatInfo","List","dense","curlHistory","ListItem","secondaryAction","IconButton","edge","aria-label","style","marginLeft","ListItemAvatar","Avatar","ListItemText","primary","Input","width","disableUnderline","endAdornment","size","secondary","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dbb49828.chunk.js","sourcesContent":["import shellwords from \"shellwords-ts\";\nimport { isURL, parseField } from \"./index\";\n\nexport const parser = (str: string): { header?: Record<string, string>; body?: string; method?: string; url?: string } => {\n  const s = shellwords.split(str);\n  if (s[0] !== \"curl\") {\n    return {};\n  }\n  const args = rewrite(s);\n  const out: any = { method: \"GET\", header: {}, url: \"\" };\n  let state = \"\";\n\n  args.forEach(function (arg: string) {\n    switch (true) {\n      case isURL(arg):\n        out.url = arg;\n        break;\n\n      case arg === \"-A\" || arg === \"--user-agent\":\n        state = \"user-agent\";\n        break;\n\n      case arg === \"-H\" || arg === \"--header\":\n        state = \"header\";\n        break;\n\n      case arg === \"-d\" ||\n        arg === \"--data\" ||\n        arg === \"--data-ascii\" ||\n        arg === \"--data-raw\" ||\n        arg === \"--data-binary\":\n        state = \"data\";\n        break;\n\n      case arg === \"-u\" || arg === \"--user\":\n        state = \"user\";\n        break;\n\n      case arg === \"-I\" || arg === \"--head\":\n        out.method = \"HEAD\";\n        break;\n\n      case arg === \"-X\" || arg === \"--request\":\n        state = \"method\";\n        break;\n\n      case arg === \"-b\" || arg === \"--cookie\":\n        state = \"cookie\";\n        break;\n\n      case arg === \"--compressed\":\n        out.header[\"Accept-Encoding\"] =\n          out.header[\"Accept-Encoding\"] || \"deflate, gzip\";\n        break;\n\n      case !!arg:\n        switch (state) {\n          case \"header\":\n            const field = parseField(arg);\n            out.header[field[0]] = field[1];\n            state = \"\";\n            break;\n          case \"user-agent\":\n            out.header[\"User-Agent\"] = arg;\n            state = \"\";\n            break;\n          case \"data\":\n            if (out.method === \"GET\" || out.method === \"HEAD\")\n              out.method = \"POST\";\n            out.header[\"Content-Type\"] =\n              out.header[\"Content-Type\"] || \"application/x-www-form-urlencoded\";\n            out.body = out.body ? out.body + \"&\" + arg : arg;\n            state = \"\";\n            break;\n          case \"user\":\n            out.header[\"Authorization\"] = \"Basic \" + btoa(arg);\n            state = \"\";\n            break;\n          case \"method\":\n            out.method = arg;\n            state = \"\";\n            break;\n          case \"cookie\":\n            out.header[\"Set-Cookie\"] = arg;\n            state = \"\";\n            break;\n        }\n        break;\n    }\n  });\n\n  return out;\n};\n\n/**\n * Rewrite args for special cases such as -XPUT.\n */\n\nfunction rewrite(args: string[]) {\n  return args.reduce((args: string[], a) => {\n    const newArgs = [...args];\n    if (0 === a.indexOf(\"-X\")) {\n      newArgs.push(\"-X\");\n      newArgs.push(a.slice(2));\n    } else {\n      newArgs.push(a);\n    }\n\n    return newArgs;\n  }, []);\n}\n","import prettier from \"prettier/standalone\";\nimport parserGraphql from \"prettier/parser-graphql\";\n\nimport { parser } from \"./parser\";\n\nconst DefaultValue = {\n  url: \"\",\n  query: \"\",\n  header: \"\",\n  variables: \"\",\n  method: \"GET\"\n};\n\nfunction formatter(inputStr: string) {\n  if (!inputStr) return DefaultValue;\n  let body;\n  let header;\n  let variables;\n  let query;\n  let method;\n  let url;\n  try {\n    const parsed = parser(inputStr);\n    body = parsed.body || \"\";\n    header = parsed.header || {};\n    method = parsed.method;\n    url = parsed.url;\n    const jsCodes = JSON.parse(\n      body.replace(/^\\$/, \"\").replace(/\\\\(\\\\)?n/g, \"\")\n    );\n    variables = jsCodes.variables;\n    query = jsCodes.query;\n  } catch {\n    return DefaultValue;\n  }\n\n  return {\n    url,\n    method,\n    query: formatStrToGraphql(query),\n    header: formatJsToJson(header),\n    variables: formatJsToJson(variables),\n  };\n}\n\nconst formatJsToJson = (js: Record<string, any>) => {\n  try {\n    return JSON.stringify(js, null, 2);\n  } catch {\n    return \"\";\n  }\n};\n\nconst formatStrToGraphql = (str: string) => {\n  try {\n    return prettier.format(str, {\n      parser: \"graphql\",\n      plugins: [parserGraphql],\n    });\n  } catch {\n    return \"\";\n  }\n};\n\nconst isURL = (s: string) => /^https?:\\/\\//.test(s);\n\nconst parseField = (s: string) => s.split(/: (.+)/);\n\nconst beautyFormatInfo = (formatInput: ReturnType<typeof formatter>) => `\nGraphql Queries:\n${formatInput.query}\nGraphql Variables:\n${formatInput.variables}\n\nRequest Headers:\n${formatInput.header}\n`;\n\nexport {\n  formatJsToJson,\n  formatStrToGraphql,\n  isURL,\n  parseField,\n  formatter,\n  beautyFormatInfo,\n};\n","export function uuid() {\n  var d = new Date().getTime();\n  var uuid = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(\n    /[xy]/g,\n    function (c) {\n      var r = (d + Math.random() * 16) % 16 | 0;\n      d = Math.floor(d / 16);\n      return (c === \"x\" ? r : (r & 0x7) | 0x8).toString(16);\n    }\n  );\n  return uuid;\n}\n","import { useState, useCallback, useEffect } from \"react\";\nimport localForage from \"localforage\";\nimport { uuid } from \"./utils\";\nimport { Curl } from \"./types\";\n\nexport const useHistory = () => {\n  const [curlHistories, setCurlHistories] = useState<Array<Curl>>([]);\n  useEffect(() => {\n    localForage.getItem<Curl[]>(\"curlHistories\").then((data) => {\n      if (data) {\n        setCurlHistories(data);\n      }\n    });\n  }, []);\n  const setHistories = (curls: Curl[]) => {\n    setCurlHistories(curls);\n    localForage.setItem(\"curlHistories\", curls);\n  };\n  const pushHistory = useCallback(\n    (curl: string) =>\n      setHistories([{ curl, id: uuid(), name: \"\" }].concat(curlHistories)),\n    [curlHistories]\n  );\n  const removeHistory = useCallback(\n    (id: string) => {\n      setHistories(curlHistories.filter((curlHis) => curlHis.id !== id));\n    },\n    [curlHistories]\n  );\n  const changeHistory = useCallback(\n    (curl: Curl) => {\n      const histories = [...curlHistories];\n      histories.splice(\n        curlHistories.findIndex((curlHis) => curlHis.id === curl.id),\n        1,\n        curl\n      );\n      setHistories(histories);\n    },\n    [curlHistories]\n  );\n\n  return {\n    curlHistories,\n    pushHistory,\n    removeHistory,\n    changeHistory,\n  };\n};\n","import React, { useState, useMemo, useCallback, useEffect } from \"react\";\nimport useClippy from \"use-clippy\";\nimport axios, { Method } from \"axios\";\nimport classNames from \"classnames\";\nimport Button from \"@mui/material/Button\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Avatar from \"@mui/material/Avatar\";\nimport IconButton from \"@mui/material/IconButton\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport PublishIcon from \"@mui/icons-material/Publish\";\nimport HttpIcon from \"@mui/icons-material/Http\";\nimport LoadingButton from \"@mui/lab/LoadingButton\";\nimport CheckCircleOutlineIcon from \"@mui/icons-material/CheckCircleOutline\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport Input from \"@mui/material/Input\";\nimport \"./App.css\";\nimport { formatter, beautyFormatInfo } from \"./formatter\";\nimport { parser } from \"./formatter/parser\";\nimport { useHistory } from \"./hooks\";\nimport { Curl } from \"./types\";\n\nconst configs = [\n  {\n    key: \"query\",\n    title: \"Graphql Queries\",\n  },\n  {\n    key: \"variables\",\n    title: \"Graphql Variables\",\n  },\n  {\n    key: \"header\",\n    title: \"Request Headers\",\n  },\n];\n\nconst doRequest = async (curl: string) => {\n  const parsedInput = parser(curl);\n  let data;\n  try {\n    data = await axios\n      .request({\n        method: parsedInput.method as Method,\n        url: parsedInput.url,\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          ...(parsedInput.header || {}),\n        },\n        data: parsedInput.body!.replace(/^\\$/, \"\").replace(/\\\\(\\\\)?n/g, \"\"),\n      })\n      .then((data) => data.data);\n  } catch (e) {\n    return {\n      error: e,\n    };\n  }\n  return {\n    data,\n  };\n};\n\nfunction App() {\n  const [input, setInput] = useState(\"\");\n  const [isRequest, setIsRequest] = useState(false);\n  const [responseTime, setResponseTime] = useState(0);\n  const [editingName, setEditingName] = useState(\"\");\n  const [result, setResult] = useState(\"\");\n  const [editingId, setEditingId] = useState(\"\");\n  const { curlHistories, pushHistory, removeHistory, changeHistory } =\n    useHistory();\n  const formatInput = useMemo(() => formatter(input), [input]);\n  const [, setClipbaord] = useClippy();\n  const handleChangeHistory = () => {\n    if (!editingName) return;\n    changeHistory({\n      ...((curlHistories.find((item) => item.id === editingId) || {}) as Curl),\n      name: editingName,\n    });\n    setEditingId(\"\");\n    setEditingName(\"\");\n  };\n  const hasError = useMemo(\n    () =>\n      input &&\n      !formatInput.variables &&\n      !formatInput.query &&\n      !formatInput.header,\n    [input, formatInput]\n  );\n  const handleEditingItem = (item: Curl) => {\n    setEditingId(item.id);\n    setEditingName(item.name);\n  };\n  const handleRun = async () => {\n    setResponseTime(0);\n    setIsRequest(true);\n    const date = Date.now();\n    try {\n      const { data } = await doRequest(input);\n      setResult(JSON.stringify(data, null, 2));\n    } catch (e) {\n      setResult(JSON.stringify(e, null, 2));\n    } finally {\n      setIsRequest(false);\n      setResponseTime(Date.now() - date);\n    }\n  };\n  useEffect(() => {\n    setResult(\"\");\n    setResponseTime(0);\n  }, [input]);\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <div className=\"codeWrap\">\n          <h3>Graphql cURL</h3>\n          <textarea\n            className={classNames(\"code\", { showError: hasError })}\n            value={input}\n            placeholder=\"Paste code here...\"\n            onChange={(e) => setInput(e.target.value)}\n          ></textarea>\n        </div>\n        <div className=\"responseInfo\">\n          <h3>Response Data{!!responseTime && `（${responseTime}ms）`}</h3>\n          <textarea\n            readOnly\n            className={classNames(\"code\", { showError: hasError })}\n            value={result}\n            onChange={(e) => setInput(e.target.value)}\n          ></textarea>\n        </div>\n        {configs.map(({ key, title }) => {\n          const value = formatInput[key as keyof typeof formatInput];\n          return (\n            <div className=\"show\">\n              <h3>{title}</h3>\n              <textarea\n                readOnly\n                className=\"targetValue\"\n                value={value}\n              ></textarea>\n              {value && (\n                <button className=\"copyBtn\" onClick={() => setClipbaord(value)}>\n                  copy\n                </button>\n              )}\n            </div>\n          );\n        })}\n        <div className=\"operations\">\n          <LoadingButton\n            loading={isRequest}\n            disabled={hasError || !input}\n            onClick={handleRun}\n          >\n            Run\n          </LoadingButton>\n          <Button\n            disabled={hasError || !input}\n            onClick={() => setClipbaord(beautyFormatInfo(formatInput))}\n          >\n            Copy Info\n          </Button>\n          <Button\n            disabled={hasError || !input}\n            onClick={() => pushHistory(input)}\n          >\n            Save\n          </Button>\n          <Button disabled={!input} onClick={() => setInput(\"\")}>\n            clear\n          </Button>\n          <List dense={false} className=\"curlHistories\">\n            {curlHistories.map((curlHistory) => (\n              <div>\n                <ListItem\n                  secondaryAction={\n                    <div>\n                      <IconButton\n                        onClick={() => setInput(curlHistory.curl)}\n                        edge=\"end\"\n                        aria-label=\"publish\"\n                      >\n                        <PublishIcon />\n                      </IconButton>\n\n                      <IconButton\n                        style={{ marginLeft: \"15px\" }}\n                        edge=\"end\"\n                        aria-label=\"delete\"\n                        onClick={() => removeHistory(curlHistory.id)}\n                      >\n                        <DeleteIcon />\n                      </IconButton>\n                    </div>\n                  }\n                >\n                  <ListItemAvatar>\n                    <Avatar>\n                      <HttpIcon />\n                    </Avatar>\n                  </ListItemAvatar>\n                  <ListItemText\n                    primary={\n                      <Input\n                        style={{ width: \"250px\" }}\n                        disabled={editingId !== curlHistory.id}\n                        disableUnderline\n                        endAdornment={\n                          editingId === curlHistory.id ? (\n                            <IconButton\n                              size=\"small\"\n                              onClick={handleChangeHistory}\n                            >\n                              <CheckCircleOutlineIcon />\n                            </IconButton>\n                          ) : (\n                            <IconButton\n                              onClick={() => handleEditingItem(curlHistory)}\n                              size=\"small\"\n                            >\n                              <EditIcon />\n                            </IconButton>\n                          )\n                        }\n                        value={\n                          editingId === curlHistory.id\n                            ? editingName\n                            : curlHistory.name || \"curl\"\n                        }\n                        size=\"small\"\n                        id=\"standard-basic\"\n                        placeholder=\"Input some specific name...\"\n                        onChange={(e) => setEditingName(e.target.value)}\n                      />\n                    }\n                    secondary={curlHistory.curl}\n                  />\n                </ListItem>\n              </div>\n            ))}\n          </List>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}